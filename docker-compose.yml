services:
  veniceorders_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: veniceorders_api
    depends_on:
      sqlserver:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "5000:5000"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__SqlServerConnection: "Server=sqlserver,1433;Database=VeniceOrdersDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True"
      ConnectionStrings__MongoDb: "mongodb://mongodb:27017"
      ConnectionStrings__Redis: "redis:6379"
      ConnectionStrings__RabbitMq: "amqp://guest:guest@rabbitmq:5672/"
      ConnectionStrings__Kafka: "kafka:9092"
    networks:
      - venice_network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - venice_network
    healthcheck:
      test: ["CMD", "sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong!Passw0rd", "-Q", "SELECT 1"]
      interval: 10s
      retries: 10
      start_period: 20s

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - venice_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - venice_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - venice_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - venice_network
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      retries: 5
      start_period: 20s

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - venice_network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      retries: 5
      start_period: 20s

volumes:
  sqlserver_data:
  mongodb_data:

networks:
  venice_network:
    driver: bridge
